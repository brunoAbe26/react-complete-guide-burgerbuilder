{"ast":null,"code":"import _objectSpread from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\nimport { connect } from 'react-redux';\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      totalPrice: 0,\n      purchaseable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updatedCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updatedCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceDeduction = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceDeduction;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + _this.state.totalPrice);\n      var queryString = queryParams.join('&');\n\n      _this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props); // axios.get('/ingredients.json')\n      //     .then(response => {\n      //         this.setState({ingredients: response.data});\n      //     })\n      //     .catch(error => {\n      //         this.setState({error: true});\n      //     });\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchaseable: sum > 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      } //{salad: true, meat: false, ...}\n\n\n      var orderSummary = null;\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Ingredients can't be loaded\") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n      console.log(this.state);\n\n      if (this.props.ings) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchaseable: this.state.purchaseable,\n          ordered: this.purchaseHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.props.ings,\n          purchaseCanceled: this.purchaseCancelHandler,\n          purchaseContinued: this.purchaseContinueHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch({\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingName\n      });\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["E:\\Udemy\\React - The complete Guide\\react-complete-guide-burgerbuilder\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","actionTypes","connect","BurgerBuilder","state","totalPrice","purchaseable","purchasing","loading","error","addIngredientHandler","type","oldCount","ingredients","updatedCount","updatedIngredients","priceAddition","INGREDIENT_PRICES","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","console","log","sum","Object","keys","map","igKey","reduce","el","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n        totalPrice: 0,\r\n        purchaseable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount () {\r\n        console.log(this.props);\r\n        // axios.get('/ingredients.json')\r\n        //     .then(response => {\r\n        //         this.setState({ingredients: response.data});\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({error: true});\r\n        //     });\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el\r\n            }, 0);\r\n        this.setState({purchaseable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = type => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n\r\n    }\r\n\r\n    removeIngredientHandler = type => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        const queryParams = [];\r\n        for (let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }//{salad: true, meat: false, ...}\r\n        let orderSummary = null;\r\n\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        console.log(this.state);\r\n        if (this.props.ings) {\r\n\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchaseable={this.state.purchaseable}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.state.totalPrice} />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ings}\r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.state.totalPrice} />\r\n        }\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\r\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}