{"ast":null,"code":"import _defineProperty from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\Udemy\\\\React - The complete Guide\\\\react-complete-guide-burgerbuilder\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionsTypes';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\nvar initialState = {\n  ingredients: null,\n  totalPrice: 0,\n  error: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1)),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1)),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: action.ingredients,\n        error: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:\\Udemy\\React - The complete Guide\\react-complete-guide-burgerbuilder\\burger-builder\\src\\store\\reducers\\burgerBuilder.js"],"names":["actionTypes","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","ingredients","totalPrice","error","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,yBAA7B;AAEA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;AAOA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,+BACOH,KADP;AAEIJ,QAAAA,WAAW,oBACJI,KAAK,CAACJ,WADF,sBAENK,MAAM,CAACG,cAFD,EAEkBJ,KAAK,CAACJ,WAAN,CAAkBK,MAAM,CAACG,cAAzB,IAA2C,CAF7D,EAFf;AAMIP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBP,iBAAiB,CAACW,MAAM,CAACG,cAAR;AANpD;;AAQJ,SAAKf,WAAW,CAACgB,iBAAjB;AACI,+BACOL,KADP;AAEIJ,QAAAA,WAAW,oBACJI,KAAK,CAACJ,WADF,sBAENK,MAAM,CAACG,cAFD,EAEkBJ,KAAK,CAACJ,WAAN,CAAkBK,MAAM,CAACG,cAAzB,IAA2C,CAF7D,EAFf;AAMIP,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBP,iBAAiB,CAACW,MAAM,CAACG,cAAR;AANpD;;AAQJ,SAAKf,WAAW,CAACiB,eAAjB;AACI,+BACON,KADP;AAEIJ,QAAAA,WAAW,EAAEK,MAAM,CAACL,WAFxB;AAGIE,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKT,WAAW,CAACkB,wBAAjB;AACI,+BACOP,KADP;AAEIF,QAAAA,KAAK,EAAE;AAFX;;AAIJ;AACI,aAAOE,KAAP;AA/BR;AAiCH,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionsTypes';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 0,\r\n    error: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}